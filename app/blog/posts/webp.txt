2022-10-18-an-accessible-modal-without-javascript.md:![Video game final boss](/_public/blog/post-assets/final-boss.webp)
2023-01-12-restoring-scroll-position-for-server-rendered-sites.md:![Mr. T with a scroll](/_public/blog/post-assets/scroll-restore/lets-scroll.webp)
2023-02-10-why-we-ssr-web-components.md:(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push( [ [59172], {
2023-02-10-why-we-ssr-web-components.md:![use the platform](/_public/blog/post-assets/use-the-platform.webp)
2023-02-21-why-does-everyone-suddenly-hate-single-page-apps.md:![East Bound and Down](/_public/blog/post-assets/east-bound-and-down.webp)
2023-02-23-enhancing-fwas-with-web-components.md:But another way of looking at this is, build the simplest thing that can work first. So instead of installing a webpack, and babel, and a framework, and adding link tags, and running a build script to just have a link, just throw that anchor tag right in there, it's going to be okay, and it's going to render just fine. And if the customer complains about that link tag, says, "I really want this, when I click it, to be a modal," that's the time to bring in JavaScript, but not the first cut.
2023-03-30-adding-comments-to-the-enhance-blog-template.md:![comment demo](/_public/blog/post-assets/comments.webp)
2023-06-29-progressive-enhancement-the-enhance-way.md:![demo](/_public/blog/post-assets/random-doggo/dog-form.webp)
2023-07-19-typescript-yagni.md:**Compilation Step:** TypeScript is not JavaScript. Therefore, to be executable in the browser, it must be transpiled into JavaScript. This means you’ll be introducing a compilation step into your project. Setting up the build step, whether it be via tsc, webpack, vite, rollup, etc. can be intimidating for new developers adding unnecessary complexity to your project. Do you know what is quicker than a highly optimized build step? No build step at all.
2023-09-28-introducing-enhance-music.md:image: "/_public/blog/post-assets/cole-enhance-music/cover.webp"
2023-09-28-introducing-enhance-music.md:<blog-image alt='The Enhance Music app shown in both a mobile phone display and a desktop web browser' src='/_public/blog/post-assets/cole-enhance-music/layout.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:<blog-image alt='Diagram showing navigation between two library pages in an iframe, and an independent, persistent audio player in a second iframe, which is updated via links from the library iframe' src='/_public/blog/post-assets/cole-enhance-music/iframes.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:<blog-image alt='Two tracks in a tracklist, with the second track indicated as active via a play icon to the left of the track title' src='/_public/blog/post-assets/cole-enhance-music/tracklist.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:<blog-image alt='Image showing system audio players in Chrome, Firefox, and Safari. Safari’s audio player appears to be broken.' src='/_public/blog/post-assets/cole-enhance-music/system-audio.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:<blog-image alt='Custom audio player interface' src='/_public/blog/post-assets/cole-enhance-music/custom-audio.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:<blog-image alt='Custom audio player interface, shown in standby mode and while a track is playing' src='/_public/blog/post-assets/cole-enhance-music/play-pause.webp'></blog-image>
2023-09-28-introducing-enhance-music.md:But honestly, getting the performance to this point mostly just happened on its own. We formatted our album covers as `.webp` images and sized them appropriately, and we kept bundle sizes in mind when looking for waveform libraries on NPM, but otherwise, the strategy here could be summed up as: ‘Use the platform.’
2024-03-12-introducing-enhance-image.md:In the above example, we don’t just deliver the generated variants of your source image in different sizes. By default, we also provide further optimizations by delivering these variants in [`webp` format](https://developers.google.com/speed/webp), at an 80% quality setting. And — like all other Enhance elements — Enhance Image renders its content as HTML on the server, with no client side JavaScript required.
2024-03-12-introducing-enhance-image.md:The format option takes one of the following format strings: `webp`, `avif`, `jxl`, `jpeg`, `png`, or `gif`. Generated images will be returned in the given format. `webp` is recommended for compatibility and performance, and is the default option. [Read more about image formats on the web here.](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types)

name: Node CI

# Push tests pushes; PR tests merges
on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  # Test the build
  build:
    # Setup
    runs-on: ubuntu-latest

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: Install
        run: npm install

      - name: Test
        run: npm test
        env:
          CI: true

      - name: Notify
        uses: homoluctus/slatify@master
        if: github.ref == 'refs/heads/main' && failure()
        with:
          type: ${{ job.status }}
          job_name: "*Build*"
          url: ${{ secrets.SLACK_NOTIFY }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}

  # Assuming all that went fine (and it's main): deploy!
  deploy:
    # Setup
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install
        run: npm i

      - name: Staging Deploy
        if: github.ref == 'refs/heads/main' && github.repository == 'enhance-dev/enhance.dev'
        run: npx arc deploy --staging
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Production Deploy
        if: startsWith(github.ref, 'refs/tags/v') && github.repository == 'enhance-dev/enhance.dev'

        run: npx arc deploy --production
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Notify
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*Publish*"
          url: ${{ secrets.SLACK_NOTIFY }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
